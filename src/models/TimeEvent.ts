/* tslint:disable */
/* eslint-disable */
/**
 * Trading212 Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
/**
 * 
 * @export
 * @interface TimeEvent
 */
export interface TimeEvent {
    /**
     * 
     * @type {Date}
     * @memberof TimeEvent
     */
    date?: Date;
    /**
     * 
     * @type {string}
     * @memberof TimeEvent
     */
    type?: TimeEventTypeEnum;
}


/**
 * @export
 */
export const TimeEventTypeEnum = {
    Open: 'OPEN',
    Close: 'CLOSE',
    BreakStart: 'BREAK_START',
    BreakEnd: 'BREAK_END',
    PreMarketOpen: 'PRE_MARKET_OPEN',
    AfterHoursOpen: 'AFTER_HOURS_OPEN',
    AfterHoursClose: 'AFTER_HOURS_CLOSE'
} as const;
export type TimeEventTypeEnum = typeof TimeEventTypeEnum[keyof typeof TimeEventTypeEnum];


/**
 * Check if a given object implements the TimeEvent interface.
 */
export function instanceOfTimeEvent(value: object): value is TimeEvent {
    return true;
}

export function TimeEventFromJSON(json: any): TimeEvent {
    return TimeEventFromJSONTyped(json, false);
}

export function TimeEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeEvent {
    if (json == null) {
        return json;
    }
    return {
        
        'date': json['date'] == null ? undefined : (new Date(json['date'])),
        'type': json['type'] == null ? undefined : json['type'],
    };
}

export function TimeEventToJSON(value?: TimeEvent | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'date': value['date'] == null ? undefined : ((value['date']).toISOString()),
        'type': value['type'],
    };
}

